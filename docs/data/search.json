{"list":[{"title":".magic","link":"<a href=\"magic.html\">.magic</a>","description":"<p>store/magic.ts</p>"},{"title":".magic.actions","link":"<a href=\"magic.actions.html\">actions</a>"},{"title":".magic.actions.api_get","link":"<a href=\"magic.actions.html#.api_get\">api_get</a>","description":"<p>do get request to url: API_URL + endpoint with request query of data</p>"},{"title":".magic.actions.done_prefix","link":"<a href=\"magic.actions.html#.done_prefix\">done_prefix</a>","description":"<p>get the done prefix for a given task</p>"},{"title":".magic.actions.path","link":"<a href=\"magic.actions.html#.path\">path</a>","description":"<p>get the smart text associated with a given url</p>"},{"title":".magic.actions.prefix","link":"<a href=\"magic.actions.html#.prefix\">prefix</a>","description":"<p>get the prefix for a given task</p>"},{"title":".magic.actions.rated_api_get","link":"<a href=\"magic.actions.html#.rated_api_get\">rated_api_get</a>","description":"<p>do api_get but abide by rate limit (only eval once every 15 seconds)</p>"},{"title":".magic.actions.type","link":"<a href=\"magic.actions.html#.type\">type</a>","description":"<p>get the smart type associated with a given description</p>"},{"title":".magic.actions.type_full","link":"<a href=\"magic.actions.html#.type_full\">type_full</a>","description":"<p>get the full type name from the short type</p>"},{"title":".magic.getters","link":"<a href=\"magic.getters.html\">getters</a>"},{"title":".magic.state","link":"<a href=\"magic.state.html\">state</a>"},{"title":".magic.state.done_prefixes","link":"<a href=\"magic.state.html#.done_prefixes\">done_prefixes</a>"},{"title":".magic.state.last","link":"<a href=\"magic.state.html#.last\">last</a>"},{"title":".magic.state.prefixes","link":"<a href=\"magic.state.html#.prefixes\">prefixes</a>"},{"title":".magic.state.types","link":"<a href=\"magic.state.html#.types\">types</a>"},{"title":".main","link":"<a href=\"main.html\">.main</a>","description":"<p>store/index.ts</p>"},{"title":".main.actions","link":"<a href=\"main.actions.html\">actions</a>","description":"<p>The actions to manipulate the store state</p>"},{"title":".main.actions.add_class","link":"<a href=\"main.actions.html#.add_class\">add_class</a>","description":"<p>Add a class to the active user's document, and show a toast saying that the class was added</p>"},{"title":".main.actions.archive_task","link":"<a href=\"main.actions.html#.archive_task\">archive_task</a>","description":"<p>Archive an instance of a task from a class (for teachers). Intended to be preformed from the ViewTask Modal</p>"},{"title":".main.actions.class_from_ref","link":"<a href=\"main.actions.html#.class_from_ref\">class_from_ref</a>","description":"<p>Get the class object from a class reference</p>"},{"title":".main.actions.class_text","link":"<a href=\"main.actions.html#.class_text\">class_text</a>","description":"<p>get the smart text associated with a given class</p>"},{"title":".main.actions.clear","link":"<a href=\"main.actions.html#.clear\">clear</a>","description":"<p>Reset the store state and local storage, and redirect to home if page requires auth</p>"},{"title":".main.actions.code_from_ref","link":"<a href=\"main.actions.html#.code_from_ref\">code_from_ref</a>","description":"<p>Create a proxy code from a ref (email/uid)</p>"},{"title":".main.actions.code_from_ref_helper","link":"<a href=\"main.actions.html#.code_from_ref_helper\">code_from_ref_helper</a>"},{"title":".main.actions.create_class","link":"<a href=\"main.actions.html#.create_class\">create_class</a>","description":"<p>Create a class with the given object, and add it to the active user's document. (for teachers)</p>"},{"title":".main.actions.create_doc","link":"<a href=\"main.actions.html#.create_doc\">create_doc</a>","description":"<p>Create the user's document in the remote database, create a teacher document if the user is a teacher, and create a personal account if the user is using a personal account. Also preforms onboarding for non-teacher</p>"},{"title":".main.actions.create_task","link":"<a href=\"main.actions.html#.create_task\">create_task</a>","description":"<p>Create a task with the given object, and add it to the classes specified in the object. (for teachers)</p>"},{"title":".main.actions.create_teacher_doc","link":"<a href=\"main.actions.html#.create_teacher_doc\">create_teacher_doc</a>","description":"<p>Create the teacher document for the user, and redirect to the create class page</p>"},{"title":".main.actions.doc_from_uid","link":"<a href=\"main.actions.html#.doc_from_uid\">doc_from_uid</a>","description":"<p>Get a user document from a uid</p>"},{"title":".main.actions.fetch_classes","link":"<a href=\"main.actions.html#.fetch_classes\">fetch_classes</a>","description":"<p>Fetch all classes from the user's document and combine them into an array, while checking for duplicates and invalid classes</p>"},{"title":".main.actions.fetch_classes_by_email","link":"<a href=\"main.actions.html#.fetch_classes_by_email\">fetch_classes_by_email</a>","description":"<p>Fetch all classes for a given email, and set the loaded classes to the result</p>"},{"title":".main.actions.finish_tutorial","link":"<a href=\"main.actions.html#.finish_tutorial\">finish_tutorial</a>","description":"<p>Set the user's tutorial status to finished</p>"},{"title":".main.actions.get_cached_surveys","link":"<a href=\"main.actions.html#.get_cached_surveys\">get_cached_surveys</a>","description":"<p>Get the survey data for the given dates for this user, using the cached data in the active doc. If the data does not include the given dates, get the data from the server and save it to use as the cashe</p>"},{"title":".main.actions.get_remote","link":"<a href=\"main.actions.html#.get_remote\">get_remote</a>","description":"<p>Get the user's document from the remote database, and create it if it doesn't exist. Preforms additional checks for personal accounts, and removes the linked account if it doesn't exist</p>"},{"title":".main.actions.get_surveys","link":"<a href=\"main.actions.html#.get_surveys\">get_surveys</a>","description":"<p>Get the survey data for the given dates for this user</p>"},{"title":".main.actions.get_tasks","link":"<a href=\"main.actions.html#.get_tasks\">get_tasks</a>","description":"<p>Get all tasks from all classes</p>"},{"title":".main.actions.hide_timeout","link":"<a href=\"main.actions.html#.hide_timeout\">hide_timeout</a>","description":"<p>Hide the popup saying that the session has timed out</p>"},{"title":".main.actions.invite_linked","link":"<a href=\"main.actions.html#.invite_linked\">invite_linked</a>","description":"<p>Invite a user account to link to another user's account (for personal accounts only,) including sending them an email with the code to join</p>"},{"title":".main.actions.link_account_uid","link":"<a href=\"main.actions.html#.link_account_uid\">link_account_uid</a>","description":"<p>Link a user account to another user's account by uid (for personal accounts only)</p>"},{"title":".main.actions.login","link":"<a href=\"main.actions.html#.login\">login</a>","description":"<p>Log the user in with Google OAuth (using the appropriate prompt type based on window support), and set the user object.</p>"},{"title":".main.actions.login_personal","link":"<a href=\"main.actions.html#.login_personal\">login_personal</a>","description":"<p>Most things that login() does, but for personal accounts (does not preform org account check, enforce sign-in domain, or redirect)</p>"},{"title":".main.actions.login_promise","link":"<a href=\"main.actions.html#.login_promise\">login_promise</a>","description":"<p>A wrapper for the store.user state, to wait for the user to be set</p>"},{"title":".main.actions.logout","link":"<a href=\"main.actions.html#.logout\">logout</a>","description":"<p>Log the user out and clear the store state</p>"},{"title":".main.actions.note_for","link":"<a href=\"main.actions.html#.note_for\">note_for</a>","description":"<p>Get the note for the given ref</p>"},{"title":".main.actions.path_to_ref","link":"<a href=\"main.actions.html#.path_to_ref\">path_to_ref</a>","description":"<p>Convert a path to a ref (email~class_id?~task_id)</p>"},{"title":".main.actions.ref_from_code","link":"<a href=\"main.actions.html#.ref_from_code\">ref_from_code</a>","description":"<p>Get the ref (email/uid) from a code</p>"},{"title":".main.actions.ref_to_path","link":"<a href=\"main.actions.html#.ref_to_path\">ref_to_path</a>","description":"<p>Convert a ref to a path (email/class_id?/task_id)</p>"},{"title":".main.actions.refresh_timeout","link":"<a href=\"main.actions.html#.refresh_timeout\">refresh_timeout</a>","description":"<p>A proxy for the refreshTimeout function in firebase.ts (to reduce unnecessary onSnapshot calls)</p>"},{"title":".main.actions.remove_class","link":"<a href=\"main.actions.html#.remove_class\">remove_class</a>","description":"<p>Remove a class from the active user's document, and show a toast saying that the class was removed manually</p>"},{"title":".main.actions.remove_class_id_helper","link":"<a href=\"main.actions.html#.remove_class_id_helper\">remove_class_id_helper</a>","description":"<p>Helper function to remove a class from the active user's document and save changes to remote</p>"},{"title":".main.actions.remove_invalid","link":"<a href=\"main.actions.html#.remove_invalid\">remove_invalid</a>","description":"<p>Remove a class from the active user's document, and show a toast saying that the class was removed because it was invalid</p>"},{"title":".main.actions.report_logs","link":"<a href=\"main.actions.html#.report_logs\">report_logs</a>","description":"<p>save logs to server for debugging later, with some session data attached</p>"},{"title":".main.actions.save_daily_survey","link":"<a href=\"main.actions.html#.save_daily_survey\">save_daily_survey</a>","description":"<p>Save the responses from the daily survey to the active user's document</p>"},{"title":".main.actions.save_join_form","link":"<a href=\"main.actions.html#.save_join_form\">save_join_form</a>","description":"<p>Save the responses from the join form to the active user's document</p>"},{"title":".main.actions.set_account_pref","link":"<a href=\"main.actions.html#.set_account_pref\">set_account_pref</a>","description":"<p>Set a preference in the account doc</p>"},{"title":".main.actions.set_active","link":"<a href=\"main.actions.html#.set_active\">set_active</a>","description":"<p>Set the active document (the signed-in account's doc, or the linked account's if it exists) to the provided document</p>"},{"title":".main.actions.set_finished","link":"<a href=\"main.actions.html#.set_finished\">set_finished</a>","description":"<p>set a task with the given ref to finished in the finished array of the active doc (remove if finished is false, add path if finished is true)</p>"},{"title":".main.actions.set_note","link":"<a href=\"main.actions.html#.set_note\">set_note</a>","description":"<p>set a task with the given path to have a note in the keyed &quot;notes&quot; property of the active doc (remove if value is falsey, add note if truthy)</p>"},{"title":".main.actions.set_user","link":"<a href=\"main.actions.html#.set_user\">set_user</a>","description":"<p>Set the user object and load the user's document, with some additional checks and error handling. Also set the user's document if it exists, or create it if it doesn't, and logs them out if the account is deemed invalid</p>"},{"title":".main.actions.show_timeout","link":"<a href=\"main.actions.html#.show_timeout\">show_timeout</a>","description":"<p>Show a popup saying that the session has timed out</p>"},{"title":".main.actions.task_from_ref","link":"<a href=\"main.actions.html#.task_from_ref\">task_from_ref</a>","description":"<p>Get the task object from a task reference</p>"},{"title":".main.actions.toggle_simplified","link":"<a href=\"main.actions.html#.toggle_simplified\">toggle_simplified</a>","description":"<p>Toggle the simplified display view</p>"},{"title":".main.actions.toggle_teacher","link":"<a href=\"main.actions.html#.toggle_teacher\">toggle_teacher</a>","description":"<p>Toggle teacher mode (for testing)</p>"},{"title":".main.actions.toggle_theme","link":"<a href=\"main.actions.html#.toggle_theme\">toggle_theme</a>","description":"<p>Toggle the theme between light and dark, and save to local storage and user account doc</p>"},{"title":".main.actions.uninvite_linked","link":"<a href=\"main.actions.html#.uninvite_linked\">uninvite_linked</a>","description":"<p>Unlink a user account from another user's account (for personal accounts only)</p>"},{"title":".main.actions.upcoming_from_ref","link":"<a href=\"main.actions.html#.upcoming_from_ref\">upcoming_from_ref</a>","description":"<p>Get the next 4 upcoming task objects for a given class reference</p>"},{"title":".main.actions.update_class","link":"<a href=\"main.actions.html#.update_class\">update_class</a>","description":"<p>Update an instance of a class (for teachers). Intended to be preformed from the EditClass Modal</p>"},{"title":".main.actions.update_remote","link":"<a href=\"main.actions.html#.update_remote\">update_remote</a>","description":"<p>Update the active user's document in the remote database</p>"},{"title":".main.actions.update_task","link":"<a href=\"main.actions.html#.update_task\">update_task</a>","description":"<p>Update an instance of a task from a class (for teachers). Intended to be preformed from the EditTask Modal</p>"},{"title":".main.actions.update_wrapper_acc_doc","link":"<a href=\"main.actions.html#.update_wrapper_acc_doc\">update_wrapper_acc_doc</a>","description":"<p>Update the authenticated user's document in the remote database (for personal accounts only)</p>"},{"title":".main.actions.update_wrapper_acc_doc","link":"<a href=\"main.actions.html#.update_wrapper_acc_doc\">update_wrapper_acc_doc</a>","description":"<p>Update the authenticated user's document in the remote database with the data given (for personal accounts only)</p>"},{"title":".main.getters","link":"<a href=\"main.getters.html\">getters</a>","description":"<p>The getters to get data that's based off of the store state, but requires manipulation</p>"},{"title":".main.getters.ORG_DOMAIN","link":"<a href=\"main.getters.html#.ORG_DOMAIN\">ORG_DOMAIN</a>","description":"<p>Get the domain of the organization (@domain.tld)</p>"},{"title":".main.getters.account_ref","link":"<a href=\"main.getters.html#.account_ref\">account_ref</a>","description":"<p>Get the user's absolute document reference (the signed-in account, even if it's a linked account)</p>"},{"title":".main.getters.active_doc","link":"<a href=\"main.getters.html#.active_doc\">active_doc</a>","description":"<p>Get the user's active document (the signed-in account's doc, or the linked account's if it exists)</p>"},{"title":".main.getters.active_ref","link":"<a href=\"main.getters.html#.active_ref\">active_ref</a>","description":"<p>Get the user's active document reference (the signed-in account's doc ref, or the linked account's if it exists)</p>"},{"title":".main.getters.done_daily_survey","link":"<a href=\"main.getters.html#.done_daily_survey\">done_daily_survey</a>","description":"<p>Check if user has completed the daily survey, or is a teacher</p>"},{"title":".main.getters.done_join_form","link":"<a href=\"main.getters.html#.done_join_form\">done_join_form</a>","description":"<p>Check if user has completed the join form</p>"},{"title":".main.getters.done_tutorial","link":"<a href=\"main.getters.html#.done_tutorial\">done_tutorial</a>","description":"<p>Check if user has completed the tutorial</p>"},{"title":".main.getters.finished_tasks","link":"<a href=\"main.getters.html#.finished_tasks\">finished_tasks</a>","description":"<p>return all the finished tasks</p>"},{"title":".main.getters.get_loaded_classes","link":"<a href=\"main.getters.html#.get_loaded_classes\">get_loaded_classes</a>","description":"<p>Get the classes that have been loaded for the loaded_email, and set the .is_joined property on each</p>"},{"title":".main.getters.get_theme","link":"<a href=\"main.getters.html#.get_theme\">get_theme</a>","description":"<p>Get theme from local storage or user doc</p>"},{"title":".main.getters.is_admin","link":"<a href=\"main.getters.html#.is_admin\">is_admin</a>","description":"<p>Check if user is a admin - currently true for all users for testing purposes TODO</p>"},{"title":".main.getters.is_teacher","link":"<a href=\"main.getters.html#.is_teacher\">is_teacher</a>","description":"<p>Check if user is a teacher, or is in teacher mode locally (for testing)</p>"},{"title":".main.getters.linked_account_ref","link":"<a href=\"main.getters.html#.linked_account_ref\">linked_account_ref</a>","description":"<p>Get the user's linked account document reference (the account that the user is linked to, if it exists)</p>"},{"title":".main.getters.linked_accounts","link":"<a href=\"main.getters.html#.linked_accounts\">linked_accounts</a>","description":"<p>Get all linked accounts from active_doc.linked</p>"},{"title":".main.getters.non_recent_signin","link":"<a href=\"main.getters.html#.non_recent_signin\">non_recent_signin</a>","description":"<p>Check if user signed in within the last 24 hours</p>"},{"title":".main.getters.notes","link":"<a href=\"main.getters.html#.notes\">notes</a>","description":"<p>return all the notes in a dictionary with the ref as the key</p>"},{"title":".main.getters.recently_joined","link":"<a href=\"main.getters.html#.recently_joined\">recently_joined</a>","description":"<p>Check if user joined within the last 12 hours</p>"},{"title":".main.getters.simplified","link":"<a href=\"main.getters.html#.simplified\">simplified</a>","description":"<p>Get if the user is using a simplified view (true) or not (false)</p>"},{"title":".main.getters.upcoming","link":"<a href=\"main.getters.html#.upcoming\">upcoming</a>","description":"<p>et the upcoming tasks (after 8AM today)</p>"},{"title":".main.getters.upcoming_todo","link":"<a href=\"main.getters.html#.upcoming_todo\">upcoming_todo</a>","description":"<p>Get the upcoming tasks (after 8AM today) that havent been marked as done</p>"},{"title":".main.state","link":"<a href=\"main.state.html\">state</a>","description":"<p>The state of the main store</p>"},{"title":".main.state.account_doc","link":"<a href=\"main.state.html#.account_doc\">account_doc</a>"},{"title":".main.state.classes","link":"<a href=\"main.state.html#.classes\">classes</a>"},{"title":".main.state.linked_account_doc","link":"<a href=\"main.state.html#.linked_account_doc\">linked_account_doc</a>"},{"title":".main.state.loaded_classes","link":"<a href=\"main.state.html#.loaded_classes\">loaded_classes</a>"},{"title":".main.state.loaded_email","link":"<a href=\"main.state.html#.loaded_email\">loaded_email</a>"},{"title":".main.state.logout_prompt","link":"<a href=\"main.state.html#.logout_prompt\">logout_prompt</a>"},{"title":".main.state.paused","link":"<a href=\"main.state.html#.paused\">paused</a>"},{"title":".main.state.personal_account","link":"<a href=\"main.state.html#.personal_account\">personal_account</a>"},{"title":".main.state.tasks","link":"<a href=\"main.state.html#.tasks\">tasks</a>"},{"title":".main.state.teacher","link":"<a href=\"main.state.html#.teacher\">teacher</a>"},{"title":".main.state.theme","link":"<a href=\"main.state.html#.theme\">theme</a>"},{"title":".main.state.user","link":"<a href=\"main.state.html#.user\">user</a>"},{"title":".notify","link":"<a href=\"notify.html\">.notify</a>","description":"<p>store/notifications.ts</p>"},{"title":".notify.actions","link":"<a href=\"notify.actions.html\">actions</a>"},{"title":".notify.actions.add","link":"<a href=\"notify.actions.html#.add\">add</a>","description":"<p>Create a web notification</p>"},{"title":".notify.actions.play","link":"<a href=\"notify.actions.html#.play\">play</a>","description":"<p>Play a sound file</p>"},{"title":".notify.actions.register","link":"<a href=\"notify.actions.html#.register\">register</a>","description":"<p>Setup the web notifications api permissions and notify the user that they're now active</p>"},{"title":".notify.getters","link":"<a href=\"notify.getters.html\">getters</a>"},{"title":".notify.getters.enabled","link":"<a href=\"notify.getters.html#.enabled\">enabled</a>"},{"title":".shortcuts","link":"<a href=\"shortcuts.html\">.shortcuts</a>","description":"<p>store/shortcuts.ts</p>"},{"title":".shortcuts.actions","link":"<a href=\"shortcuts.actions.html\">actions</a>"},{"title":".shortcuts.actions.clear","link":"<a href=\"shortcuts.actions.html#.clear\">clear</a>","description":"<p>Clear all shortcuts</p>"},{"title":".shortcuts.actions.get","link":"<a href=\"shortcuts.actions.html#.get\">get</a>","description":"<p>Get a shortcut by object</p>"},{"title":".shortcuts.actions.get_key","link":"<a href=\"shortcuts.actions.html#.get_key\">get_key</a>","description":"<p>Get a shortcut by key</p>"},{"title":".shortcuts.actions.is_active","link":"<a href=\"shortcuts.actions.html#.is_active\">is_active</a>","description":"<p>Check if a shortcut is active</p>"},{"title":".shortcuts.actions.register","link":"<a href=\"shortcuts.actions.html#.register\">register</a>","description":"<p>Register a new shortcut</p>"},{"title":".shortcuts.actions.register_all","link":"<a href=\"shortcuts.actions.html#.register_all\">register_all</a>","description":"<p>Register a list of shortcuts with a given tag</p>"},{"title":".shortcuts.actions.remove","link":"<a href=\"shortcuts.actions.html#.remove\">remove</a>","description":"<p>Remove a shortcut</p>"},{"title":".shortcuts.actions.remove_all","link":"<a href=\"shortcuts.actions.html#.remove_all\">remove_all</a>","description":"<p>Remove all shortcuts with a given tag</p>"},{"title":".shortcuts.actions.remove_key","link":"<a href=\"shortcuts.actions.html#.remove_key\">remove_key</a>","description":"<p>Remove a shortcut by key</p>"},{"title":".shortcuts.actions.remove_keys","link":"<a href=\"shortcuts.actions.html#.remove_keys\">remove_keys</a>","description":"<p>Remove shortcuts with any of the given keys</p>"},{"title":".shortcuts.actions.remove_tag","link":"<a href=\"shortcuts.actions.html#.remove_tag\">remove_tag</a>","description":"<p>Remove all shortcuts with a given tag</p>"},{"title":".shortcuts.actions.set_activity","link":"<a href=\"shortcuts.actions.html#.set_activity\">set_activity</a>","description":"<p>Set the activity state of a shortcut</p>"},{"title":".shortcuts.actions.sort","link":"<a href=\"shortcuts.actions.html#.sort\">sort</a>","description":"<p>Sort the shortcuts</p>"},{"title":".shortcuts.clean_key","link":"<a href=\"shortcuts.html#.clean_key\">clean_key</a>","description":"<p>Clean up keystrings for display</p>"},{"title":".shortcuts.getters","link":"<a href=\"shortcuts.getters.html\">getters</a>"},{"title":".shortcuts.getters.list","link":"<a href=\"shortcuts.getters.html#.list\">list</a>","description":"<p>Get a list of shortcuts</p>"},{"title":".shortcuts.getters.sections","link":"<a href=\"shortcuts.getters.html#.sections\">sections</a>","description":"<p>Get a list of shortcuts by section</p>"},{"title":"_log","link":"<a href=\"global.html#_log\">_log</a>","description":"<p>Log function, takes any number of arguments. If the first character is nonstandard and followed by a space, it'll use that as a tag</p>"},{"title":"_status","link":"<a href=\"global.html#_status\">_status</a>"},{"title":"_statuslog","link":"<a href=\"global.html#_statuslog\">_statuslog</a>","description":"<p>A bound version of _log with the tone set to &quot;info&quot;</p>"},{"title":"common","link":"<a href=\"common.html\">common</a>","description":"<p>common/index.ts</p>"},{"title":"compatDateObj","link":"<a href=\"global.html#compatDateObj\">compatDateObj</a>","description":"<p>Converts a date string to a Date object (in a format that Safari can handle)</p>"},{"title":"downloadLogData","link":"<a href=\"global.html#downloadLogData\">downloadLogData</a>","description":"<p>downloads a file with given log data</p>"},{"title":"getFirstNonStandardCharacter","link":"<a href=\"global.html#getFirstNonStandardCharacter\">getFirstNonStandardCharacter</a>","description":"<p>Imperfect helper for _status.log()</p>"},{"title":"msToTime","link":"<a href=\"global.html#msToTime\">msToTime</a>","description":"<p>Converts milliseconds to hours:minutes:seconds timestamp; only includes hours if non-zero</p>"},{"title":"save","link":"<a href=\"global.html#save\">save</a>","description":"<p>Save log to file</p>"},{"title":"state","link":"<a href=\"global.html#state\">state</a>","description":"<p>Function to create a clean store state, used for initialization. Will attempt to load from window.localStorage variable to save on firebase calls -&gt; isn't always stable after app update that changes state keyings</p>"},{"title":"store","link":"<a href=\"store.html\">store</a>","description":"<p>Group of stores that handle page-inspecific data and methods</p>"}]}