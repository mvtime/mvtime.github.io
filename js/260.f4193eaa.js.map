{"version":3,"file":"js/260.f4193eaa.js","mappings":"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","sources":["webpack://mvtime/./src/views/Portal/NotesTask.vue","webpack://mvtime/./src/views/Portal/NotesTask.vue?f151"],"sourcesContent":["<template>\n  <main class=\"notes_task\">\n    <header class=\"modal_header\" ref=\"title\">\n      <h2 class=\"header_style modal_header_title\">\n        {{ original_note ? \"Update\" : \"Add\" }} {{ task.type || \"task\" }} notes\n      </h2>\n    </header>\n    <div class=\"overlay_contents\" ref=\"contents\">\n      <div v-if=\"ready\">\n        <div class=\"overlay_contents_text change_text\">\n          Save your notes for \"{{ task.name }}\" in\n          <a\n            class=\"class_name button_pointer_text\"\n            :href=\"`/view/${task._class.ref}`\"\n            @click=\"\n              $event.preventDefault();\n              $router.push({\n                name: 'viewclass',\n                params: { ref: task._class.ref },\n                query: $route.query,\n              });\n            \"\n            :style=\"{\n              '--color-class': task._class.color,\n              '--color-class-alt': task._class.color + '2d',\n            }\"\n            >{{ $store.class_text(task._class) }}</a\n          >\n        </div>\n        <div class=\"inputs_row\">\n          <textarea\n            v-model=\"note\"\n            class=\"styled_input styled_textarea task_note\"\n            type=\"text\"\n            :placeholder=\"'Your ' + type_full + ' Notes (Optional)'\"\n          >\n          </textarea>\n        </div>\n      </div>\n      <img alt=\"Loading Icon\" class=\"loading_icon\" v-else />\n    </div>\n    <div class=\"bottom_actions\">\n      <button\n        class=\"back_action click_escape\"\n        :class=\"{ loading_bg: loading }\"\n        v-if=\"ready && $route.name == 'notes'\"\n        :disabled=\"loading\"\n        @click=\"back\"\n      >\n        View\n      </button>\n      <button v-else class=\"close_action click_escape\" @click=\"$emit('close')\">Close</button>\n      <div class=\"flex_spacer\"></div>\n      <button\n        class=\"primary_styled\"\n        :class=\"{ loading_bg: loading }\"\n        v-if=\"ready && $route.name != 'notes'\"\n        :disabled=\"loading\"\n        @click=\"back\"\n      >\n        View\n      </button>\n      <button\n        class=\"continue_action click_ctrlenter\"\n        :class=\"{ loading_bg: loading }\"\n        @click=\"try_submit\"\n        :disabled=\"not_submittable\"\n      >\n        {{ original_note ? \"Update\" : \"Add\" }}\n      </button>\n    </div>\n  </main>\n</template>\n\n<script>\n/**\n * Creates a new task for the teacher's selected class(es).\n *\n * @module CreateTaskView\n * @description Modal that allows teacher's to create a new task for their classes.\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\n * @requires module:store/MainStore\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\n */\n\nimport { ErrorToast, WarningToast, SuccessToast } from \"@svonk/util\";\nimport smoothReflow from \"vue-smooth-reflow\";\n\nexport default {\n  name: \"EditTaskView\",\n  emits: [\"close\", \"view\"],\n  mixins: [smoothReflow],\n  data() {\n    return {\n      task: {},\n      original_note: \"\",\n      note: \"\",\n      ready: false,\n      loading: true,\n    };\n  },\n  mounted() {\n    this.$smoothReflow({\n      el: this.$refs.contents,\n      childTransitions: true,\n    });\n    this.$smoothReflow({\n      el: this.$refs.title,\n      hideOverflow: true,\n    });\n    this.get_task();\n  },\n  computed: {\n    not_submittable() {\n      return !this.changed;\n    },\n    type_full() {\n      return this.$magic?.type_full(this.task.type) || \"Task\";\n    },\n    changed() {\n      return this.original_note !== this.note;\n    },\n  },\n  methods: {\n    try_submit() {\n      if (!this.not_submittable) {\n        this.update_note();\n      } else {\n        new WarningToast(\"No changes to save\", 1000);\n      }\n    },\n    back() {\n      if (this.$route.name == \"notes\") {\n        this.$router.push({\n          name: \"viewtask\",\n          params: {\n            ref: this.$route.params.ref,\n          },\n          query: this.$route.query,\n        });\n      } else {\n        this.$emit(\"view\", this.task);\n      }\n    },\n    async update_note() {\n      this.loading = true;\n      this.$store\n        .set_note(this.note, this.$route.params.ref)\n        .then(() => {\n          new SuccessToast(\n            `${this.original_note ? (this.note ? \"Updated\" : \"Removed\") : \"Added\"} ${\n              this.task.type || \"task\"\n            } notes for ${this.task.name}`,\n            2000\n          );\n          this.back();\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.$status.error(`ðŸ“ƒ Couldn't edit ${this.task.type || \"task\"} notes:`, err);\n          new ErrorToast(`Couldn't edit ${this.task.type || \"task\"} notes`, err, 2000);\n        });\n    },\n    async get_task() {\n      // get task ref from route params\n      const ref = this.$route.params.ref.split(\"~\").join(\"/\");\n      if (!ref) {\n        new WarningToast(\"No task specified\", 1500);\n        this.$emit(\"close\");\n      } else if (ref.split(\"/\").length < 3) {\n        new WarningToast(\"Invalid task specified\", 1500);\n        this.$emit(\"close\");\n      }\n      // get task from store\n      this.$store\n        .task_from_ref(ref)\n        .then((task) => {\n          if (!task) {\n            new WarningToast(\"Couldn't find that task\", 2000);\n            this.$status.warn(\"âš  Couldn't find task\");\n            this.$emit(\"close\");\n          } else {\n            this.task = task;\n            this.original = { ...task };\n            this.ready = true;\n            this.loading = false;\n          }\n          // get note\n          const note = this.$store.note_for(this.$route.params.ref);\n          if (note) {\n            this.note = note;\n            this.original_note = note;\n          }\n        })\n        .catch((err) => {\n          new ErrorToast(\"Error getting task\", err, 1500);\n          this.$status.error(\"âš  Error getting task\", err);\n          this.$emit(\"close\");\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.inputs_row {\n  margin-bottom: 0;\n}\n.styled_input.task_note {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n.loading_icon {\n  max-height: 150px;\n  min-width: 100%;\n}\n</style>\n","import { render } from \"./NotesTask.vue?vue&type=template&id=f7767136&scoped=true\"\nimport script from \"./NotesTask.vue?vue&type=script&lang=js\"\nexport * from \"./NotesTask.vue?vue&type=script&lang=js\"\n\nimport \"./NotesTask.vue?vue&type=style&index=0&id=f7767136&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f7767136\"]])\n\nexport default __exports__"],"names":["class","ref","key","alt","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","original_note","task","type","_hoisted_4","ready","_hoisted_5","_hoisted_6","_createTextVNode","name","href","_class","onClick","_cache","$event","preventDefault","_ctx","$router","push","$route","query","style","_normalizeStyle","color","$store","class_text","_hoisted_7","_hoisted_8","note","placeholder","$options","type_full","_hoisted_9","_hoisted_10","_hoisted_11","_normalizeClass","loading_bg","loading","disabled","args","back","_hoisted_12","$emit","_hoisted_13","_hoisted_14","_createCommentVNode","try_submit","not_submittable","_hoisted_15","emits","mixins","smoothReflow","data","mounted","this","$smoothReflow","el","$refs","contents","childTransitions","title","hideOverflow","get_task","computed","changed","$magic","methods","WarningToast","update_note","params","set_note","then","SuccessToast","catch","err","$status","error","ErrorToast","split","join","length","task_from_ref","original","warn","note_for","__exports__","render"],"sourceRoot":""}