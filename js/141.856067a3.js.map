{"version":3,"file":"js/141.856067a3.js","mappings":"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","sources":["webpack://mvtime/./src/views/Portal/CreateTask.vue","webpack://mvtime/./src/views/Portal/CreateTask.vue?4068"],"sourcesContent":["<template>\n  <div class=\"create_task\">\n    <header class=\"modal_header\">\n      <h2 class=\"header_style modal_header_title\">\n        <span>Add a{{ is_vowel(type_full[0]) ? \"n\" : \"\" }}&MediumSpace;</span>\n        <div\n          class=\"header_magic_wrapper magic_wrapper contents_inherit\"\n          :class=\"{ magic_ready: type_ready }\"\n        >\n          <select\n            title=\"Task type\"\n            v-model=\"task.type\"\n            class=\"type_dropdown styled_input styled_select\"\n            ref=\"type\"\n          >\n            <option\n              class=\"type_dropdown__option styled_select__option\"\n              v-for=\"entry in $magic.types\"\n              :value=\"entry.key\"\n              :key=\"entry.key\"\n            >\n              {{ entry.name }}\n            </option>\n          </select>\n          <div\n            class=\"magic magic_in styled_magic alt_bg click-action\"\n            :class=\"{ magic_out: !type_ready, loading_bg: loading_type }\"\n            :disabled=\"!type_ready || loading_type\"\n            @click=\"magic_type\"\n            title=\"Use magically inferred type\"\n          ></div>\n        </div>\n      </h2>\n    </header>\n    <div class=\"overlay_contents\" ref=\"contents\">\n      <div class=\"overlay_contents_text\">\n        <span v-if=\"is_note\">Add a new {{ task.type }} to</span>\n        <span v-else>Schedule a new {{ task.type }} for</span>\n        your class{{ classes && classes.length == 1 ? \"\" : \"es\" }}\n      </div>\n      <div class=\"inputs_row\">\n        <input\n          v-if=\"!is_note\"\n          v-model=\"task.name\"\n          class=\"styled_input\"\n          type=\"text\"\n          :placeholder=\"type_full + ' Name'\"\n          :disabled=\"is_note\"\n        />\n        <input\n          type=\"date\"\n          ref=\"date\"\n          class=\"styled_input input_task__date\"\n          v-model=\"task.date\"\n          :style=\"{ maxWidth: is_note ? '100%' : null }\"\n        />\n        <div class=\"flex-break\"></div>\n        <textarea\n          v-model=\"task.description\"\n          class=\"styled_input styled_textarea task_description\"\n          type=\"text\"\n          :placeholder=\"type_full + (is_note ? ' Contents' : ' Description (Optional)')\"\n        >\n        </textarea>\n        <div class=\"flex-break\"></div>\n        <div class=\"styled_input styled_links_box\">\n          <div class=\"styled_links_display\">\n            <span v-if=\"!task.links || !task.links.length\" class=\"placeholder\"\n              >{{ type_full }} Links (Optional)</span\n            >\n            <div v-else class=\"styled_line_links\">\n              <a\n                class=\"styled_line_links__link styled_line_links__remove\"\n                target=\"_blank\"\n                v-for=\"link in task.links\"\n                :key=\"link.path\"\n                @click=\"remove_link(link)\"\n                >{{ link.text }}</a\n              >\n            </div>\n          </div>\n          <hr class=\"styled_links_separator\" />\n          <div\n            class=\"styled_links_add\"\n            @keydown=\"\n              if ($event.key === 'Enter') {\n                $event.preventDefault();\n                add_newlink();\n              }\n            \"\n          >\n            <input\n              class=\"styled_links_add__path\"\n              type=\"url\"\n              v-model=\"newlink.path\"\n              @blur=\"fix_newlink_path\"\n              placeholder=\"Link URL (https://example.com)\"\n            />\n            <div class=\"magic_wrapper styled_links_add__sized\">\n              <input\n                class=\"styled_links_add__text\"\n                type=\"text\"\n                v-model=\"newlink.text\"\n                placeholder=\"Link Text (what students see)\"\n              />\n              <div\n                class=\"magic magic_in styled_magic alt_bg click-action\"\n                :class=\"{ magic_out: !path_ready, loading_bg: loading_text }\"\n                :disabled=\"!path_ready || loading_text\"\n                @click=\"magic_text\"\n                title=\"Auto-generate link text\"\n              ></div>\n            </div>\n            <button\n              class=\"styled_links_add__action\"\n              @click=\"add_newlink\"\n              :disabled=\"newlink_not_ready\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"overlay_contents_text\">\n        Choose which classes this {{ task.type }} will be added to\n      </div>\n      <div class=\"classes_checkboxes checkboxes\">\n        <a\n          class=\"checkbox\"\n          v-for=\"class_obj in classes\"\n          :key=\"class_obj.id\"\n          :href=\"'/view/' + $store.path_to_ref(class_obj.ref)\"\n        >\n          <input type=\"checkbox\" :id=\"class_obj.id\" :value=\"class_obj.id\" v-model=\"task_classes\" />\n          <label\n            class=\"button_pointer_text class_name\"\n            v-if=\"class_obj.id\"\n            :for=\"class_obj.id\"\n            :style=\"{\n              '--color-class': class_obj.color,\n              '--color-class-alt': class_obj.color + '2d',\n            }\"\n          >\n            {{ $store.class_text(class_obj) }}\n          </label>\n          <label v-else :for=\"class_obj.id\" @click=\"$event.stopPropagation\">{{\n            class_obj.name\n          }}</label>\n        </a>\n      </div>\n    </div>\n    <div class=\"bottom_actions\">\n      <button class=\"close_action click_escape\" @click=\"$emit('close')\">Close</button>\n      <div class=\"flex_spacer\"></div>\n      <button\n        class=\"continue_action click_ctrlenter\"\n        :class=\"{ loading_bg: loading }\"\n        @click=\"try_submit\"\n        :disabled=\"!ready\"\n      >\n        Add {{ task.type }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\n/**\n * Creates a new task for the teacher's selected class(es).\n *\n * @module CreateTaskView\n * @description Modal that allows teacher's to create a new task for their classes.\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\n * @requires module:store/MainStore\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\n */\n\nimport { ErrorToast, WarningToast, SuccessToast } from \"@svonk/util\";\nimport smoothReflow from \"vue-smooth-reflow\";\n\nexport default {\n  name: \"CreateTaskView\",\n  emits: [\"close\"],\n  mixins: [smoothReflow],\n  mounted() {\n    this.$smoothReflow({\n      el: this.$refs.contents,\n    });\n    if (!this.$route?.params?.tasktype) {\n      this.$refs.type.focus();\n    } else {\n      this.$refs.date.focus();\n    }\n\n    // remove the class and date from the query\n    this.$router.replace({\n      ...this.$route,\n      query: { ...this.$route.query, class: undefined, date: undefined },\n    });\n  },\n  data() {\n    return {\n      task: {\n        name: \"\",\n        date: this.$route.query?.date ? this.$route.query.date : \"\",\n        description: \"\",\n        type: this.$route.params.tasktype ? this.$route.params.tasktype : \"task\",\n      },\n      task_classes: this.$route.query?.class ? [this.$route.query.class] : [],\n      newlink: {\n        text: \"\",\n        path: \"\",\n      },\n      loading: false,\n      loading_type: false,\n      loading_text: false,\n      loaded_type: false,\n      loaded_text: false,\n    };\n  },\n  computed: {\n    ready() {\n      return (\n        (this.task.name || this.is_note) &&\n        this.task.date &&\n        this.task_classes.length &&\n        (!this.is_note || this.task.description)\n      );\n    },\n    type_full() {\n      return this.$magic.type_full(this.task.type);\n    },\n    newlink_not_ready() {\n      // check if path and text, and also that path is a valid url\n      if (!this.newlink.path || !this.newlink.text) {\n        return true;\n      }\n      try {\n        void new URL(this.newlink.path);\n        return false;\n      } catch (err) {\n        return true;\n      }\n    },\n    class_name() {\n      if (!this.classes) return null;\n      let class_obj = this.classes.find((class_obj) => class_obj.id === this.class_id);\n      if (!class_obj) return null;\n      return class_obj.name;\n    },\n    classes() {\n      return this.$store.classes;\n    },\n    is_note() {\n      return this.task.type === \"note\";\n    },\n    type_ready() {\n      return !this.loaded_type && this.task && (this.task.description || this.task.name).length > 5;\n    },\n    path_ready() {\n      return (\n        !this.loaded_text &&\n        this.newlink.path &&\n        this.newlink_not_ready &&\n        this.newlink.path.startsWith(\"https://\")\n      );\n    },\n  },\n  methods: {\n    try_submit() {\n      if (this.ready) {\n        this.create_task();\n      } else {\n        new WarningToast(\"Please fill out all required fields\", 1000);\n      }\n    },\n    is_vowel(char) {\n      return [\"a\", \"e\", \"i\", \"o\", \"u\"].includes(char.toLowerCase());\n    },\n    add_newlink() {\n      if (!this.task.links) this.task.links = [];\n      // add protocol if missing\n      this.newlink.path = new URL(this.newlink.path).href;\n      this.task.links.push(this.newlink);\n      this.newlink = {\n        text: \"\",\n        path: \"\",\n      };\n    },\n    create_task() {\n      if (!this.newlink_not_ready) {\n        new WarningToast(\"Don't forget to to click the 'Add' button to add your link!\", 2000);\n        return;\n      }\n      this.loading = true;\n      this.$store\n        .create_task(this.task, this.task_classes)\n        .then(() => {\n          //! router to new task view?\n          this.$emit(\"close\");\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.$status.error(`📃 Couldn't create ${this.task.type || \"task\"}:`, err);\n          new ErrorToast(\"Couldn't create task\", err, 2000);\n        });\n    },\n    remove_link(link) {\n      this.task.links = this.task.links.filter((l) => l.path !== link.path);\n      this.newlink = link;\n    },\n    fix_newlink_path() {\n      if (this.newlink.path && this.newlink.path.includes(\".\")) {\n        try {\n          this.newlink.path = new URL(this.newlink.path).href;\n        } catch (err) {\n          // add protocol if missing\n          this.newlink.path = \"https://\" + this.newlink.path;\n          this.fix_newlink_path();\n        }\n      }\n    },\n    async magic_type() {\n      if (!this.type_ready) return;\n      this.loading_type = true;\n      // cleanup task\n      const clean_task = {\n        name: this.task.name,\n        description: this.task.description,\n        date: this.task.date,\n        classes: this.task_classes.map(\n          (class_id) => this.classes.find((c) => c.id == class_id)?.name\n        ),\n      };\n\n      this.$magic\n        .type(JSON.stringify(clean_task))\n        .then((type) => {\n          if (type) {\n            new SuccessToast(`Generated task type '${type}'`, 1500);\n            this.$status.log(\"🔗 Generated task type:\", type);\n            this.task.type = type;\n          } else {\n            new WarningToast(\"Couldn't reasonably infer a task type\", 2000);\n            this.$status.warn(\"📃 Couldn't generate task type\");\n          }\n          this.loaded_type = true;\n          this.loading_type = false;\n        })\n        .catch((err) => {\n          new ErrorToast(\"Something went wrong generating the task type\", err, 3000);\n          this.$status.error(\"⚠ Failed task type generation:\", err);\n          this.loaded_type = false;\n          this.loading_type = false;\n        });\n    },\n    async magic_text() {\n      if (!this.path_ready || this.newlink.text) return;\n      this.loading_text = true;\n      this.$magic\n        .text(this.newlink.path)\n        .then((text) => {\n          if (text) {\n            new SuccessToast(`Generated link text '${text}'`, 1500);\n            this.$status.log(\"🔗 Generated link text:\", text);\n            this.newlink.text = text;\n          } else {\n            new WarningToast(\"Couldn't reasonably infer link text\", 2000);\n            this.$status.warn(\"📃 Couldn't generate link text\");\n          }\n          this.loaded_text = true;\n          this.loading_text = false;\n        })\n        .catch((err) => {\n          new ErrorToast(\"Couldn't generate link text\", err, 3000);\n          this.$status.error(\"⚠ Failed link text generation:\", err);\n          this.loaded_text = false;\n          this.loading_text = false;\n        });\n    },\n  },\n  watch: {\n    \"$route.params.tasktype\"(new_type) {\n      this.task.type = new_type;\n    },\n    \"task.type\"(new_type, old_type) {\n      // update paramater in url\n      this.$router.replace({\n        ...this.$route,\n        params: { ...this.$route.params, tasktype: new_type },\n      });\n      // if task -> note, clear name and move to description if empty {\n      if (new_type == \"note\") {\n        this.task.description = this.task.description || this.task.name;\n        this.task.name = \"\";\n      } else if (old_type == \"note\" && this.task.description?.length <= 35) {\n        this.task.name = this.task.description;\n        this.task.description = \"\";\n      }\n    },\n    // if newlink.path changes, set loaded_text to false\n    \"newlink.path\"(new_path, old_path) {\n      if (new_path != old_path) {\n        this.loaded_text = false;\n      }\n    },\n    \"newlink.text\"(new_text, old_text) {\n      if (new_text != old_text) {\n        this.loaded_text = false;\n      }\n    },\n    // if name, description, date, or classes change, set loaded_type to false\n    // fix for references being the same\n    \"task.name\"(new_name, old_name) {\n      if (new_name !== old_name) {\n        this.loaded_type = false;\n      }\n    },\n    \"task.description\"(new_desc, old_desc) {\n      if (new_desc !== old_desc) {\n        this.loaded_type = false;\n      }\n    },\n    \"task.date\"(new_date, old_date) {\n      if (new_date !== old_date) {\n        this.loaded_type = false;\n      }\n    },\n    task_classes: {\n      deep: true,\n      handler(new_classes, old_classes) {\n        if (new_classes != old_classes) {\n          this.loaded_type = false;\n        }\n      },\n    },\n  },\n};\n</script>\n\n<style scoped>\n.checkboxes {\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: flex-start;\n  margin-top: 0.5rem;\n}\n.checkbox {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n}\n.checkbox label {\n  padding-left: 0.5rem;\n  user-select: none;\n  cursor: pointer;\n}\n.inputs_row {\n  flex-flow: row wrap;\n}\n.styled_input.input_task__date {\n  margin-right: 0;\n  max-width: 150px;\n}\nselect.type_dropdown {\n  padding: 5px;\n  background-color: var(--color-overlay-input);\n  color: var(--color-on-overlay-input);\n  border: none;\n  border-radius: var(--radius-overlay-input);\n  width: auto;\n}\n.type_dropdown__option {\n  font-size: 14px;\n}\n.class_name {\n  margin-left: 0.75em;\n}\n.checkboxes .checkbox input:checked + label.class_name {\n  background-color: var(--color-class);\n  color: var(--color-on-class);\n}\n/* new display method */\n.checkboxes .checkbox input {\n  display: none;\n}\n.checkboxes .checkbox label {\n  margin-left: unset;\n}\n/* inline variation */\n.checkboxes {\n  gap: 0.5em;\n  display: inline-flex;\n  flex-flow: row wrap;\n}\n.checkboxes .checkbox {\n  margin: 0;\n  display: inline-flex;\n  flex-grow: 1;\n}\n.checkboxes .checkbox label {\n  width: 100%;\n  text-align: center;\n}\n@media (max-width: 600px) {\n  .checkboxes {\n    gap: 0.5em;\n  }\n  .checkboxes .checkbox,\n  .checkboxes .checkbox label {\n    width: 100%;\n    text-align: left;\n    line-height: 2.5em;\n  }\n  .checkboxes .checkbox label {\n    padding: 0 1em;\n    height: 2.5em;\n  }\n}\n\n.parent.simplified .checkboxes {\n  gap: 0.5em;\n}\n.parent.simplified .checkboxes .checkbox,\n.parent.simplified .checkboxes .checkbox label {\n  width: 100%;\n  text-align: left;\n  line-height: 2.5em;\n}\n.parent.simplified .checkboxes .checkbox label {\n  padding: 0 1em;\n  height: 2.5em;\n}\n</style>\n","import { render } from \"./CreateTask.vue?vue&type=template&id=f9f53c78&scoped=true\"\nimport script from \"./CreateTask.vue?vue&type=script&lang=js\"\nexport * from \"./CreateTask.vue?vue&type=script&lang=js\"\n\nimport \"./CreateTask.vue?vue&type=style&index=0&id=f9f53c78&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f9f53c78\"]])\n\nexport default __exports__"],"names":["class","ref","key","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$options","is_vowel","type_full","_normalizeClass","magic_ready","type_ready","title","_cache","$event","$data","task","type","_Fragment","_renderList","_ctx","$magic","types","entry","value","name","_hoisted_4","magic_out","loading_bg","loading_type","disabled","onClick","args","magic_type","_hoisted_5","_hoisted_6","_hoisted_7","is_note","_hoisted_8","_hoisted_9","_createTextVNode","classes","length","_hoisted_10","_createCommentVNode","placeholder","_hoisted_11","date","style","_normalizeStyle","maxWidth","_hoisted_12","description","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","links","_hoisted_18","link","target","path","remove_link","text","_hoisted_19","_hoisted_17","_hoisted_20","onKeydown","preventDefault","add_newlink","newlink","onBlur","fix_newlink_path","_hoisted_21","path_ready","loading_text","magic_text","_hoisted_22","newlink_not_ready","_hoisted_23","_hoisted_24","_hoisted_25","class_obj","id","href","$store","path_to_ref","task_classes","_hoisted_27","for","color","class_text","_hoisted_28","stopPropagation","_hoisted_29","_hoisted_26","_hoisted_30","$emit","_hoisted_31","loading","try_submit","ready","_hoisted_32","emits","mixins","smoothReflow","mounted","this","$smoothReflow","el","$refs","contents","$route","params","tasktype","focus","$router","replace","query","undefined","data","loaded_type","loaded_text","computed","URL","err","class_name","find","class_id","startsWith","methods","create_task","WarningToast","char","includes","toLowerCase","push","then","catch","$status","error","ErrorToast","filter","l","clean_task","map","c","JSON","stringify","SuccessToast","log","warn","watch","new_type","old_type","new_path","old_path","new_text","old_text","new_name","old_name","new_desc","old_desc","new_date","old_date","deep","handler","new_classes","old_classes","__exports__","render"],"sourceRoot":""}