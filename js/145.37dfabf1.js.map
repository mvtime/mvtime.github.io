{"version":3,"file":"js/145.37dfabf1.js","mappings":"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","sources":["webpack://mvtime/./src/views/Portal/EditTask.vue","webpack://mvtime/./src/views/Portal/EditTask.vue?ea5e"],"sourcesContent":["<template>\n  <div class=\"edit_task\">\n    <header class=\"modal_header\" ref=\"title\">\n      <h2 class=\"header_style modal_header_title\">Edit {{ task.type || \"task\" }} details</h2>\n    </header>\n    <div class=\"overlay_contents\" ref=\"contents\">\n      <div v-if=\"ready\">\n        <div class=\"overlay_contents_text change_text\">\n          Change the details of your {{ task.type || \"task\"\n          }}{{ original.name ? ` \"${original.name}\"` : \"\" }} in\n          <a\n            class=\"class_name button_pointer_text\"\n            :href=\"`/view/${task._class.ref}`\"\n            @click=\"\n              $event.preventDefault();\n              $router.push({\n                name: 'viewclass',\n                params: { ref: task._class.ref },\n                query: $route.query,\n              });\n            \"\n            :style=\"{\n              '--color-class': class_obj.color,\n              '--color-class-alt': class_obj.color + '2d',\n            }\"\n            >{{ $store.class_text(class_obj) }}</a\n          >\n        </div>\n        <div class=\"inputs_row\">\n          <input\n            v-if=\"!is_note\"\n            v-model=\"task.name\"\n            class=\"styled_input\"\n            type=\"text\"\n            :placeholder=\"type_full + ' Name'\"\n            :disabled=\"is_note\"\n            enterkeyhint=\"next\"\n            @keydown.enter=\"$refs.date.focus()\"\n          />\n          <input\n            type=\"date\"\n            class=\"styled_input input_task__date\"\n            v-model=\"task.date\"\n            :style=\"{ maxWidth: is_note ? '100%' : null }\"\n            enterkeyhint=\"next\"\n            @keydown.enter=\"$refs.description.focus()\"\n          />\n          <div class=\"flex-break\"></div>\n          <textarea\n            ref=\"description\"\n            v-model=\"task.description\"\n            class=\"styled_input styled_textarea task_description\"\n            type=\"text\"\n            :placeholder=\"type_full + (is_note ? ' Contents' : ' Description (Optional)')\"\n          >\n          </textarea>\n          <div class=\"flex-break\"></div>\n          <div class=\"styled_input styled_links_box\">\n            <div class=\"styled_links_display\">\n              <span v-if=\"!task.links || !task.links.length\" class=\"placeholder\"\n                >{{ type_full }} Links (Optional)</span\n              >\n              <div v-else class=\"styled_line_links\">\n                <a\n                  class=\"styled_line_links__link styled_line_links__remove\"\n                  target=\"_blank\"\n                  v-for=\"link in task.links\"\n                  :key=\"link.path\"\n                  @click=\"remove_link(link)\"\n                  >{{ link.text }}</a\n                >\n              </div>\n            </div>\n            <hr class=\"styled_links_separator\" />\n            <div\n              class=\"styled_links_add\"\n              @keydown.enter=\"\n                $event.preventDefault();\n                add_newlink();\n              \"\n              enterkeyhint=\"done\"\n            >\n              <input\n                class=\"styled_links_add__path\"\n                type=\"url\"\n                v-model=\"newlink.path\"\n                @blur=\"fix_newlink_path\"\n                placeholder=\"Link URL (http://example.com)\"\n                enterkeyhint=\"done\"\n              />\n              <div class=\"magic_wrapper styled_links_add__sized\">\n                <input\n                  class=\"styled_links_add__text\"\n                  type=\"text\"\n                  v-model=\"newlink.text\"\n                  placeholder=\"Link Text (what students see)\"\n                  enterkeyhint=\"done\"\n                />\n                <div\n                  class=\"magic magic_in styled_magic alt_bg click-action\"\n                  :class=\"{ magic_out: !path_ready, loading_bg: loading_text }\"\n                  :disabled=\"!path_ready || loading_text\"\n                  @click=\"magic_text\"\n                  title=\"Auto-generate link text\"\n                ></div>\n              </div>\n              <button\n                class=\"styled_links_add__action\"\n                @click=\"add_newlink\"\n                :disabled=\"newlink_not_ready\"\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <img alt=\"Loading Icon\" class=\"loading_icon\" v-else />\n    </div>\n    <div class=\"bottom_actions\">\n      <button class=\"close_action click_escape\" @click=\"$emit('close')\">Cancel</button>\n      <div class=\"flex_spacer\"></div>\n      <button\n        class=\"archive_action primary_styled\"\n        @click=\"archive_task\"\n        :disabled=\"!ready || loading\"\n      >\n        Archive\n      </button>\n      <button\n        class=\"continue_action click_ctrlenter\"\n        :class=\"{ loading_bg: loading }\"\n        @click=\"try_submit\"\n        :disabled=\"not_submittable\"\n      >\n        Save {{ task.type || \"task\" }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\n/**\n * Creates a new task for the teacher's selected class(es).\n *\n * @module CreateTaskView\n * @description Modal that allows teacher's to create a new task for their classes.\n * @param {string} tasktype - The type of task to create (task, project, test, etc.) Provided by the router.\n * @requires module:store/MainStore\n * @emits {Function} close - An event emitted when the task is created or the modal is closed.\n */\n\nimport { compatDateObj } from \"@/common\";\nimport { ErrorToast, WarningToast, SuccessToast } from \"@svonk/util\";\nimport smoothReflow from \"vue-smooth-reflow\";\n\nexport default {\n  name: \"EditTaskView\",\n  emits: [\"close\"],\n  mixins: [smoothReflow],\n  data() {\n    return {\n      task: {},\n      original: {},\n      newlink: {\n        text: \"\",\n        path: \"\",\n      },\n      ready: false,\n      loading: true,\n      loading_text: false,\n      loaded_text: false,\n    };\n  },\n  mounted() {\n    this.$smoothReflow({\n      el: this.$refs.contents,\n      childTransitions: true,\n    });\n    this.$smoothReflow({\n      el: this.$refs.title,\n      hideOverflow: true,\n    });\n    this.get_task();\n  },\n  computed: {\n    not_submittable() {\n      return (\n        !this.changed ||\n        (!this.task.name && !this.is_note) ||\n        !this.task.date ||\n        (this.is_note && !this.task.description)\n      );\n    },\n    type_full() {\n      return this.$magic?.type_full(this.task.type) || \"Task\";\n    },\n    newlink_not_ready() {\n      // check if path and text, and also that path is a valid url\n      return !this.newlink.path || !this.newlink.text || !this.newlink.path.startsWith(\"http\");\n    },\n    class_obj() {\n      let classes = this.$store?.classes;\n      if (!classes) return null;\n      return classes.find((class_obj) => class_obj.id === this.original.class_id) || {};\n    },\n    is_note() {\n      return this.task.type === \"note\";\n    },\n    changed() {\n      return JSON.stringify(this.task) !== JSON.stringify(this.original);\n    },\n    date() {\n      let date = compatDateObj(this.task?.date);\n      if (isNaN(date.getTime())) return;\n      // read it as being in the current timezone\n      date = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n\n      return new Date(date).toLocaleDateString(undefined, {\n        weekday: \"long\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    },\n    path_ready() {\n      return (\n        !this.loaded_text &&\n        this.newlink.path &&\n        this.newlink_not_ready &&\n        this.newlink.path.startsWith(\"https://\")\n      );\n    },\n  },\n  watch: {\n    \"newlink.path\"(new_path, old_path) {\n      if (new_path != old_path) {\n        this.loaded_text = false;\n      }\n    },\n    \"newlink.text\"(new_text, old_text) {\n      if (new_text != old_text) {\n        this.loaded_text = false;\n      }\n    },\n  },\n  methods: {\n    try_submit() {\n      if (!this.not_submittable) {\n        this.update_task();\n      } else if (!this.changed) {\n        new WarningToast(\"No changes to submit\", 1000);\n      } else {\n        new WarningToast(\"Please fill out all required fields\", 1000);\n      }\n    },\n    add_newlink() {\n      if (!this.task.links) this.task.links = [];\n      // add protocol if missing\n      this.newlink.path = new URL(this.newlink.path).href;\n      this.task.links.push(this.newlink);\n      this.task.links = [...new Set(this.task.links)];\n      this.newlink = {\n        text: \"\",\n        path: \"\",\n      };\n    },\n    async update_task() {\n      if (!this.newlink_not_ready) {\n        new WarningToast(\"Don't forget to to click the 'Add' button to add your link!\", 2000);\n        return;\n      }\n      this.loading = true;\n      this.$store\n        .update_task(this.task.ref, this.task)\n        .then(() => {\n          // this.$emit(\"close\");\n          // redirect to view\n          this.$router.push({\n            name: \"viewtask\",\n            params: {\n              ref: this.$route.params.ref,\n            },\n            query: this.$route.query,\n          });\n        })\n        .catch((err) => {\n          this.loading = false;\n          this.$status.error(`📃 Couldn't save changes to ${this.task.type || \"task\"}:`, err);\n          new ErrorToast(`Couldn't edit ${this.task.type || \"task\"}`, err, 2000);\n        });\n    },\n    archive_task() {\n      this.$router.push({\n        name: \"archive\",\n        params: {\n          type: this.task.type,\n          ref: this.$route.params.ref,\n        },\n        query: {\n          title: this.is_note ? this.task.description : this.task.name,\n          ...this.$route.query,\n        },\n      });\n    },\n    async get_task() {\n      // get task ref from route params\n      const ref = this.$route.params.ref.split(\"~\").join(\"/\");\n      if (!ref) {\n        new WarningToast(\"No task specified\", 1500);\n        this.$emit(\"close\");\n      } else if (ref.split(\"/\").length < 3) {\n        new WarningToast(\"Invalid task specified\", 1500);\n        this.$emit(\"close\");\n      }\n      // get task from store\n      this.$store\n        .task_from_ref(ref)\n        .then((task) => {\n          if (!task) {\n            new WarningToast(\"Couldn't find that task\", 2000);\n            this.$status.warn(\"⚠ Couldn't find task\");\n            this.$emit(\"close\");\n          } else {\n            this.task = task;\n            // set original to be unconnected copy of task\n            this.original = JSON.parse(JSON.stringify(task));\n            this.ready = true;\n            this.loading = false;\n          }\n        })\n        .catch((err) => {\n          new ErrorToast(\"Error getting task\", err, 1500);\n          this.$status.error(\"⚠ Error getting task\", err);\n          this.$emit(\"close\");\n        });\n    },\n    remove_link(link) {\n      this.task.links = this.task.links.filter((l) => l.path !== link.path);\n      this.newlink = link;\n    },\n    fix_newlink_path() {\n      if (this.newlink.path && this.newlink.path.includes(\".\")) {\n        try {\n          this.newlink.path = new URL(this.newlink.path).href;\n        } catch (err) {\n          // add protocol if missing\n          this.newlink.path = \"https://\" + this.newlink.path;\n          this.fix_newlink_path();\n        }\n      }\n    },\n    async magic_text() {\n      if (!this.path_ready || this.newlink.text) return;\n      this.loading_text = true;\n      this.$magic\n        .text(this.newlink.path)\n        .then((text) => {\n          if (text) {\n            new SuccessToast(`Generated link text '${text}'`, 1500);\n            this.$status.log(\"🔗 Generated link text:\", text);\n            this.newlink.text = text;\n          } else {\n            new WarningToast(\"Couldn't reasonably infer link text\", 2000);\n            this.$status.warn(\"📃 Couldn't generate link text\");\n          }\n          this.loaded_text = true;\n          this.loading_text = false;\n        })\n        .catch((err) => {\n          new ErrorToast(\"Couldn't generate link text\", err, 3000);\n          this.$status.error(\"⚠ Failed link text generation:\", err);\n          this.loaded_text = false;\n          this.loading_text = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.checkboxes {\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: flex-start;\n  margin-top: 0.5rem;\n}\n.checkbox {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  margin-top: 0.5rem;\n}\n.checkbox label {\n  padding-left: 0.5rem;\n  user-select: none;\n  cursor: pointer;\n}\n.input_task__date {\n  max-width: 150px;\n}\n.inputs_row {\n  flex-flow: row wrap;\n}\n.input_task__date {\n  margin-right: 0;\n}\n.styled_input.input_task__date {\n  margin-right: 0;\n}\nselect.type_dropdown {\n  padding: 5px;\n  background-color: var(--color-overlay-input);\n  color: var(--color-on-overlay-input);\n  border: none;\n  border-radius: var(--radius-overlay-input);\n  width: auto;\n}\n.type_dropdown__option {\n  font-size: 14px;\n}\n.loading_icon {\n  max-height: 150px;\n  min-width: 100%;\n}\n</style>\n","import { render } from \"./EditTask.vue?vue&type=template&id=70090d50&scoped=true\"\nimport script from \"./EditTask.vue?vue&type=script&lang=js\"\nexport * from \"./EditTask.vue?vue&type=script&lang=js\"\n\nimport \"./EditTask.vue?vue&type=style&index=0&id=70090d50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-70090d50\"]])\n\nexport default __exports__"],"names":["class","ref","key","_createElementVNode","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","task","type","_hoisted_4","ready","_hoisted_5","_hoisted_6","_createTextVNode","original","name","href","_class","onClick","_cache","$event","preventDefault","_ctx","$router","push","$route","query","style","_normalizeStyle","$options","class_obj","color","$store","class_text","_hoisted_7","_hoisted_8","is_note","_createCommentVNode","placeholder","type_full","disabled","enterkeyhint","onKeydown","_withKeys","$refs","date","focus","_hoisted_9","maxWidth","description","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","links","length","_hoisted_16","_Fragment","_renderList","link","target","path","remove_link","text","_hoisted_17","_hoisted_15","_hoisted_18","add_newlink","newlink","onBlur","args","fix_newlink_path","_hoisted_19","_normalizeClass","magic_out","path_ready","loading_bg","loading_text","magic_text","title","_hoisted_20","newlink_not_ready","_hoisted_21","_hoisted_22","_hoisted_23","$emit","_hoisted_24","archive_task","loading","_hoisted_25","try_submit","not_submittable","_hoisted_26","emits","mixins","smoothReflow","data","loaded_text","mounted","this","$smoothReflow","el","contents","childTransitions","hideOverflow","get_task","computed","changed","$magic","startsWith","classes","find","id","class_id","JSON","stringify","compatDateObj","isNaN","getTime","Date","getTimezoneOffset","toLocaleDateString","undefined","weekday","month","day","watch","new_path","old_path","new_text","old_text","methods","WarningToast","update_task","URL","Set","then","params","catch","err","$status","error","ErrorToast","split","join","task_from_ref","parse","warn","filter","l","includes","SuccessToast","log","__exports__","render"],"sourceRoot":""}